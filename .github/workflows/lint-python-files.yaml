# Summary: GitHub CI workflow for checking Python files.

name: Python file checks
run-name: >
  Performing Python lint & format checks for ${{github.event_name}}
  by ${{github.triggering_actor}}

# Default values. These can be overridden when workflow dispatch is used.
env:
  py_version: '3.10.15'
  # FIXME: get the version in requirements.txt instead
  pylint_version: '3.3.3'
  yapf_version: '0.43.0'

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - '**.py'

  push:
    branches:
      - main
    paths:
      - '**.py'

  # Manual on-demand invocations.
  workflow_dispatch:
    inputs:
      py_version:
        description: 'Python version:'
        type: string

      pylint_version:
        description: 'Pylint version:'
        type: string

      yapf_version:
        description: 'Yapf version:'
        type: string

# Cancel previously-started but still active workflow runs on the same branch.
concurrency:
  group: ${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Check out a copy of the TFQ git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{inputs.py_version || env.py_version}}
          cache: 'pip'

      - name: Extract the version of Pylint from requirements.txt
        id: req
        run: |
          echo "pylint_version=" >> "$GITHUB_OUTPUT"
          number_regex='[0-9]+(\.[0-9]+)?(\.[0-9]+)?'
          while IFS= read -r line; do
            if [[ $line =~ ^pylint.* ]]; then
              if [[ $line =~ $number_regex ]]; then
                version="${BASH_REMATCH[0]}"
                echo "pylint_version=$version" >> "$GITHUB_OUTPUT"
                break
              fi
            fi
          done < "$git_root/requirements.txt"

      - name: Install Pylint
        run: |
          python -m pip install --upgrade pip
          python -m pip install pylint==${{step.req.outputs.pylint_version}}

      - name: Run Pylint
        run: |
          pylint --rcfile .pylintrc ./benchmarks ./release ./tensorflow_quantum

  # format:
  #   name: Format
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Check out a copy of the TFQ git repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{inputs.py_version || env.py_version}}
  #         cache: 'pip'

  #     - name: Install Yapf
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install yapf==${{inputs.yapf_version || env.yapf_version}}
          
