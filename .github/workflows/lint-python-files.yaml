# Summary: GitHub CI workflow for checking Python files.

name: Python file checks
run-name: >
  Performing Python lint & format checks for ${{github.event_name}}
  by ${{github.triggering_actor}}

env:
  python_ver: '3.10.15'

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - '**.py'

  push:
    branches:
      - main
    paths:
      - '**.py'

  # Manual on-demand invocations.
  workflow_dispatch:
    inputs:
      python_ver:
        description: 'Python version:'
        type: string

      pylint_ver:
        description: 'Pylint version:'
        type: string

      yapf_ver:
        description: 'Yapf version:'
        type: string

# Cancel previously-started but still active workflow runs on the same branch.
concurrency:
  group: ${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Check out a copy of the TFQ git repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{inputs.python_ver || env.python_ver}}
          cache: 'pip'

      - name: Determine the version of Pylint to use
        id: req
        run: |
          # If given a version, use that, else get it from requirements.txt.
          if [[ "${{inputs.pylint_ver}}" != "" ]]; then
            echo "pylint_version=${{inputs.pylint_ver}}" >> "$GITHUB_OUTPUT"
          else
            echo "pylint_version=" >> "$GITHUB_OUTPUT"
            number_regex='[0-9]+(\.[0-9]+)?(\.[0-9]+)?'
            while IFS= read -r line; do
              if [[ $line =~ ^pylint.* ]]; then
                if [[ $line =~ $number_regex ]]; then
                  version="${BASH_REMATCH[0]}"
                  echo "pylint_version=$version" >> "$GITHUB_OUTPUT"
                  break
                fi
              fi
            done < "$git_root/requirements.txt"
          fi

      - name: Install Pylint
        run: |
          python -m pip install pylint==${{step.req.outputs.pylint_version}}

      - name: Run Pylint
        run: |
          pylint --rcfile .pylintrc ./benchmarks ./release ./tensorflow_quantum




  # format:
  #   name: Format
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Check out a copy of the TFQ git repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{inputs.python_ver || env.python_ver}}
  #         cache: 'pip'

  #     - name: Install Yapf
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install yapf==${{inputs.yapf_ver || env.yapf_ver}}
          
